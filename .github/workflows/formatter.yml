name: Static checks

permissions:
  contents: write
  pull-requests: write

on:
  pull_request:
    branches: [ "main" ]
  
  workflow_dispatch:
    inputs:
      code_check:
        description: 'Perform a static check?'
        default: 'true'

jobs:
  static-checks:
    name: 'Static checks'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: Scony/godot-gdscript-toolkit@master
    - uses: repo-sync/pull-request@master

    - run: sudo apt-get install gh -y

    - name: Format code
      run: |
        gdformat src/
        
        if [[ `git status --porcelain` ]]; then
              BRANCH_NAME=static/check-$(date +%s)
        
              git config user.name "github-actions"
              git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
              git checkout -b $BRANCH_NAME
        
              git commit -am "chore: format GDScript files"
              git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
              git push --set-upstream origin $BRANCH_NAME
        
              gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"
              gh pr create \
                --title "chore: format GDScript files" \
                --body "Automatically formatted GDScript files using gdformat." \
                --base main \
                --head $BRANCH_NAME
            else
              echo "No formatting changes."
            fi
      
    - name: Lint code
      run: |
        gdlint src/
        
        if [[ `git status --porcelain` ]]; then
              git config user.name "github-actions"
              git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
              git checkout -b $BRANCH_NAME
        
              git commit -am "chore: lint GDScript files"
              git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
              git push --set-upstream origin $BRANCH_NAME
        
              gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"
              gh pr create \
                --title "chore: lint GDScript files" \
                --body "Automatically lints GDScript files using gdformat." \
                --base main \
                --head $BRANCH_NAME
            else
              echo "No formatting changes."
            fi
